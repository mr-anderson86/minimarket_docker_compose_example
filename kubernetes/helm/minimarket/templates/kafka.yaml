apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kafka.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.kafka.name }}
spec:
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.kafka.name }}
  template:
    metadata:
      annotations:
        #This little guy will force redeployment in case of changes in the configmap,
        #thus will reload variables from the configmap
        #(example: adding new variable or changing the value of an existing variable in the configmap)
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ .Values.kafka.name }}
    spec:
      containers:
        - name: {{ .Values.kafka.name }}
          image: {{ .Values.kafka.image }}:{{ .Values.kafka.tag }}
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_REST_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://$(KAFKA_REST_HOST_NAME):9092,PLAINTEXT_HOST://localhost:29092
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.namespace.name }}-configmap
                  key: zookeeper_url
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "/usr/bin/kafka-topics --bootstrap-server localhost:29092 --list"
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.kafka.name }}-service
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    app: {{ .Values.kafka.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.kafka.port }}
      targetPort: 9092