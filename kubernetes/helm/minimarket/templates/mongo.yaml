apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.mongo.name }}-pvc
  namespace: {{ .Values.namespace.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mongo.storage_size }}
  selector:
    matchLabels:
      type: local
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.mongo.name }}-secret
  namespace: {{ .Values.namespace.name }}
type: Opaque
data:
  username: {{ .Values.mongo.username }}
  password: {{ .Values.mongo.password }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongo.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.mongo.name }}
spec:
  replicas: {{ .Values.mongo.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.mongo.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongo.name }}
    spec:
      containers:
        - name: {{ .Values.mongo.name }}
          image: {{ .Values.mongo.image }}:{{ .Values.mongo.tag }}
          ports:
            - containerPort: 27017
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.name }}-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.name }}-secret
                  key: password
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "echo \'db.runCommand(\"ping\").ok\' | mongo localhost:27017/test --quiet"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - mountPath: /data/db
              name: {{ .Values.mongo.name }}-volume
      volumes:
        - name: {{ .Values.mongo.name }}-volume
          persistentVolumeClaim:
            claimName: {{ .Values.mongo.name }}-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mongo.name }}-service
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    app: {{ .Values.mongo.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.mongo.port }}
      targetPort: 27017