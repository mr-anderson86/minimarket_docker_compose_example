apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.mongo_express.name }}-secret
  namespace: {{ .Values.namespace.name }}
type: Opaque
data:
  username: {{ .Values.mongo_express.username }}
  password: {{ .Values.mongo_express.password }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongo_express.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.mongo_express.name }}
spec:
  replicas: {{ .Values.mongo_express.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.mongo_express.name }}
  template:
    metadata:
      annotations:
        #This little guy will force redeployment in case of changes in the configmap,
        #thus will reload variables from the configmap
        #(example: adding new variable or changing the value of an existing variable in the configmap)
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ .Values.mongo_express.name }}
    spec:
      containers:
        - name: {{ .Values.mongo_express.name }}
          image: {{ .Values.mongo_express.image }}:{{ .Values.mongo_express.tag }}
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.namespace.name }}-configmap
                  key: mongo_service_name
            - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
              value: "true"
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.name }}-secret
                  key: username
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.name }}-secret
                  key: password
            - name: ME_CONFIG_BASICAUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo_express.name }}-secret
                  key: username
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo_express.name }}-secret
                  key: password
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "wget --quiet --tries=3 --spider http://${ME_CONFIG_BASICAUTH_USERNAME}:${ME_CONFIG_BASICAUTH_PASSWORD}@localhost:8081 || exit 1"
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mongo_express.name }}-service
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    app: {{ .Values.mongo_express.name }}
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: {{ .Values.mongo_express.port }}
      targetPort: 8081
      nodePort: {{ .Values.mongo_express.nodePort }}
